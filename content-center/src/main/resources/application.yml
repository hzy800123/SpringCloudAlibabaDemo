server:
  port: 8090

management:
  endpoint:
    health:
      show-details: always

  endpoints:
    web:
      exposure:
        include: '*'

spring:
  cloud:
    nacos:
      discovery:
        # 指定 Nacos Server 的地址
        server-addr: localhost:8848
        # 服务发现 的领域模型：
        # Namespace -> Group -> Service -> Cluster -> Instance
        # 指定 namespace ( dev - dev env namespace )
        namespace: cb472fa5-5350-44b8-b576-d645c2920442
        cluster-name: Guangzhou
        metadata:
          version: V1
    inetutils:
      preferredNetworks:
        - 192.168.1
#        - 192.168


  application:
    # 指定 服务名称（使用'-'分隔）
    name: content-center

  main:
    allow-bean-definition-overriding: true

# 使用 属性配置 来指定Ribbon的负载均衡的策略
#user-center:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

# 使用 Ribbon 的饥饿加载, 默认是"懒加载"。
ribbon:
  eager-load:
    enable: true
    clients: user-center

logging:
  level:
    com.example.demo.feignclient.UserCenterFeignClient: debug

feign:
  client:
    config:
      # Feign局部配置（配置属性方式）
      # 想要调用的 微服务的名称
#      user-center:
#        loggerLevel: FULL

      # Feign全局配置（配置属性方式）
      # 将服务名称 改为default 就可以了
      default:
        loggerLevel: FULL
        # Feign 的拦截器 RequestInterceptor (属性配置方式）
        requestInterceptors: com.example.demo.requestinterceptor.ValidateInterceptorForID

  httpclient:
    # 让 feign 使用 Apache httpclient做请求，而不是默认的 urlconnection
    enable: true
    # feign 的最大连接数
    max-connections: 200
    # feign 的单个路径的最大连接数
    max-connections-per-route: 50
  # 让 feign 使用okhttp做请求，而不是默认的 urlconnection
#  okhttp:
#    enable: true
    # feign 的最大连接数
#    max-connections: 200
    # feign 的单个路径的最大连接数
#    max-connections-per-route: 50

feign.name: user-center